---
- name: Check available disk space
  shell: df -h / | awk 'NR==2 {print $4}' | sed 's/G//'
  register: disk_space
  failed_when: disk_space.stdout | float < 5  # Fail if less than 5 GB free

- name: Update apt package index
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  when: ansible_os_family == "Debian"

- name: Create Docker network
  docker_network:
    name: "{{ docker_network }}"
    state: present

- name: Create PostgreSQL data volume
  docker_volume:
    name: "postgres_data"
    state: present

- name: Create SonarQube data volume
  docker_volume:
    name: "sonarqube_data"
    state: present

- name: Create SonarQube logs volume
  docker_volume:
    name: "sonarqube_logs"
    state: present

- name: Create SonarQube extensions volume
  docker_volume:
    name: "sonarqube_extensions"
    state: present

- name: Start PostgreSQL container
  docker_container:
    name: "sonarqube_postgres"
    image: "postgres:{{ postgres_version }}"
    state: started
    restart_policy: unless-stopped
    env:
      POSTGRES_USER: "{{ sonarqube_db_user }}"
      POSTGRES_PASSWORD: "{{ sonarqube_db_password }}"
      POSTGRES_DB: "{{ sonarqube_db_name }}"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    networks:
      - name: "{{ docker_network }}"

- name: Start SonarQube container
  docker_container:
    name: "sonarqube"
    image: "sonarqube:{{ sonarqube_version }}"
    state: started
    restart_policy: unless-stopped
    env:
      SONAR_JDBC_URL: "jdbc:postgresql://sonarqube_postgres:5432/{{ sonarqube_db_name }}"
      SONAR_JDBC_USERNAME: "{{ sonarqube_db_user }}"
      SONAR_JDBC_PASSWORD: "{{ sonarqube_db_password }}"
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    ports:
      - "{{ sonarqube_port }}:9000"
    volumes:
      - "sonarqube_data:/opt/sonarqube/data"
      - "sonarqube_logs:/opt/sonarqube/logs"
      - "sonarqube_extensions:/opt/sonarqube/extensions"
    networks:
      - name: "{{ docker_network }}"
  register: sonarqube_container

- name: Wait for SonarQube to be available
  uri:
    url: "http://localhost:{{ sonarqube_port }}"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 30
  delay: 10

- name: Display SonarQube access details
  debug:
    msg: |
      SonarQube is running and accessible at http://{{ ansible_host }}:{{ sonarqube_port }}
      Default credentials: admin/admin